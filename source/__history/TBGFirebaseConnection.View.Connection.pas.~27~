unit TBGFirebaseConnection.View.Connection;

interface

uses
  TBGFirebaseConnection.Interfaces, System.Classes;

Type
  TTBGFirebaseConnection = class(TComponent, iFirebaseConnection)
    private
      FConnect : iFirebaseConnect;
      FPut : iFirebasePut;
    public
      constructor Create; reintroduce;
      destructor Destroy; override;
      class function New : iFirebaseConnection;
      function Connect : iFirebaseConnect;
      function Put : iFirebasePut;
  end;

procedure Register;

implementation

uses
  TBGFirebaseConnection.Model.Connect, TBGFirebaseConnection.Model.Put;

{ TTBGFirebaseConnection }

function TTBGFirebaseConnection.Connect: iFirebaseConnect;
begin
  if not Assigned(FConnect) then
    FConnect := TFirebaseConnectionMoldeConnect.New(Self);

  Result := FConnect;
end;

constructor TTBGFirebaseConnection.Create;
begin
  FPut := TFirebaseConnectionModelPut.New(Self);
end;

destructor TTBGFirebaseConnection.Destroy;
begin

  inherited;
end;

class function TTBGFirebaseConnection.New: iFirebaseConnection;
begin
  Result := Self.Create;
end;

function TTBGFirebaseConnection.Put: iFirebasePut;
begin
  Result := FPut;
end;

procedure Register;
begin
  RegisterComponents('TBGAbstractConnection', [TTBGFirebaseConnection]);
end;


end.
