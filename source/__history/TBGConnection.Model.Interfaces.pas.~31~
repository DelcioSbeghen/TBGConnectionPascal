unit TBGConnection.Model.Interfaces;

interface

uses
  System.Classes, Data.DB;

type
  TChangeDataSet = procedure of Object;


  iConexaoParametros = interface;
  iConexao = interface;
  iQuery = interface;

  iDriver = interface
    ['{F8F3E0E2-4333-40CD-8A4E-7B7790F2FA73}']
    function Conexao : iConexao;
    function Query : iQuery;
  end;

  iConexao = interface
    ['{FF14FC96-C57C-4BD0-9AFB-5F7AAD5D5138}']
    function Conectar : iConexao;
    function &End: TComponent;
    function Connection : TCustomConnection;
    function Commit : iConexao;
    function StartTransaction : iConexao;
    function RollbackTransaction : iConexao;
    //function Parametros: iConexaoParametros;
  end;

  iQuery = interface
    ['{BA7F4622-7AA4-413D-B9CD-CADAB16DF714}']
    function Open(aSQL: String): iQuery;
    function ExecSQL(aSQL : String) : iQuery;
    function DataSet : TDataSet; overload;
    function DataSet(Value : TDataSet) : iQuery; overload;
    function DataSource(Value : TDataSource) : iQuery;
    function Fields : TFields;
    function &End: TComponent;
    function Tag(Value : Integer) : iQuery;
    function LocalSQL(Value : TComponent) : iQuery;
  end;


  iConexaoParametros = interface
    ['{26A78068-9C26-4381-BA90-B7313F9ACAB7}']
    function Database(Value: String): iConexaoParametros;
    function UserName(Value: String): iConexaoParametros;
    function Password(Value: String): iConexaoParametros;
    function DriverID(Value: String): iConexaoParametros;
    function Server(Value: String): iConexaoParametros;
    function Porta(Value: Integer): iConexaoParametros;
    function GetDatabase(Value: String): String;
    function GetUserName(Value: String): String;
    function GetPassword(Value: String): String;
    function GetDriverID(Value: String): String;
    function GetServer(Value: String): String;
    function GetPorta(Value: Integer): Integer;
    function &End: iConexao;
  end;

  

implementation

end.



